% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/auto_translate.R
\name{auto_translate}
\alias{auto_translate}
\alias{google_translate}
\alias{microsoft_translate}
\title{Auto translate messages}
\usage{
auto_translate(translation, overwrite = FALSE, api_key,
  parallelization_strategy = c("sequential", "multicore", "cluster"),
  engine = c("google", "microsoft"))

google_translate(translation, overwrite = FALSE,
  api_key = Sys.getenv("GOOGLE_TRANSLATE_API_KEY"),
  parallelization_strategy = c("sequential", "multicore", "cluster"))

microsoft_translate(translation, overwrite = FALSE,
  api_key = Sys.getenv("MICROSOFT_TRANSLATOR_API_KEY"),
  parallelization_strategy = c("sequential", "multicore", "cluster"))
}
\arguments{
\item{translation}{An object of class \code{"po"} containing a message 
translation.}

\item{overwrite}{Logical. If \code{TRUE}, translations will be found for all
messages. If \code{FALSE}, only the messages that do not have an existing
translation will be translated.}

\item{api_key}{A string describing an API key for Google Translate or Microsoft 
Translator.}

\item{parallelization_strategy}{A string naming a parallelization strategy,
passed to \code{\link[future]{plan}}.}
}
\value{
An object of class \code{"po"} containing a message translation.
}
\description{
Automaticlly translate messages using Google Translate or Microsoft 
Translator.
}
\note{
To get a Google Translate API KEY, you must create a Google Cloud
account. See \url{https://cloud.google.com/translate/docs/getting-started}
to get started.
Likewise, to use Microsfot Translator, you need a Microsoft Azure account.
See \url{https://www.microsoft.com/en-us/translator/getstarted.aspx} to get 
started.#' @examples
\dontrun{
  # create example package
  pkg <- dummy_pkg()
  
  # setup pkg for localization
  use_localization(pkg)
  
  # generate Spanish translation in memory
  (tran <- make_translation("es", translator = "Some Person <example@example.com>"))
  
  # You need a Google Translate API key before running this
  auto_tran_google <- google_translate(tran)
  View(auto_tran_google$direct)
  View(auto_tran_google$countable)
  
  # You need a Microsoft Cognitive Services Translator API 
  # key before running this
  auto_tran_microsoft <- microsoft_translate(tran)
  View(auto_tran_microsoft$direct)
  View(auto_tran_microsoft$countable)
}
}
